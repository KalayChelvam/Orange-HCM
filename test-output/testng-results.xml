<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-22T08:32:58Z" name="Suite" finished-at="2025-09-22T08:34:10Z" duration-ms="71957">
    <groups>
    </groups>
    <test started-at="2025-09-22T08:32:58Z" name="Test" finished-at="2025-09-22T08:34:10Z" duration-ms="71957">
      <class name="tests.Testcase02_ApplyLeave">
        <test-method is-config="true" signature="initializeBrowser()[pri:0, instance:tests.Testcase02_ApplyLeave@7f132176]" started-at="2025-09-22T14:02:58Z" name="initializeBrowser" finished-at="2025-09-22T14:03:06Z" duration-ms="7707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="applyLeave(java.util.HashMap)[pri:0, instance:tests.Testcase02_ApplyLeave@7f132176]" started-at="2025-09-22T14:03:06Z" name="applyLeave" data-provider="getData" finished-at="2025-09-22T14:03:29Z" duration-ms="23720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=PkwX51@VaD, toDateValue=24, partialDaySelection=Start Day Only, leaveComment=Adding comments for Leave, fromMonthValue=October, fromDateValue=23, toMonthValue=October, leaveOption=Sick Leave - US, username=admin}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyLeave -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Testcase02_ApplyLeave@7f132176]" started-at="2025-09-22T14:03:29Z" name="tearDown" finished-at="2025-09-22T14:03:29Z" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Testcase02_ApplyLeave -->
      <class name="tests.Testcase01_Login">
        <test-method is-config="true" signature="initializeBrowser()[pri:0, instance:tests.Testcase01_Login@6bca7e0d]" started-at="2025-09-22T14:03:29Z" name="initializeBrowser" finished-at="2025-09-22T14:03:37Z" duration-ms="7426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="loginTestcase(java.util.HashMap)[pri:0, instance:tests.Testcase01_Login@6bca7e0d]" started-at="2025-09-22T14:03:37Z" name="loginTestcase" data-provider="getData" finished-at="2025-09-22T14:03:37Z" duration-ms="103" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=PkwX51@VaD, username=admin}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
	at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at jdk.proxy2/jdk.proxy2.$Proxy16.sendKeys(Unknown Source)
	at pages.LoginPage.enterPassword(LoginPage.java:35)
	at tests.Testcase01_Login.loginTestcase(Testcase01_Login.java:17)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestcase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Testcase01_Login@6bca7e0d]" started-at="2025-09-22T14:03:37Z" name="tearDown" finished-at="2025-09-22T14:03:37Z" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Testcase01_Login -->
      <class name="tests.E2ETestCase">
        <test-method is-config="true" signature="initializeBrowser()[pri:0, instance:tests.E2ETestCase@2631f68c]" started-at="2025-09-22T14:03:37Z" name="initializeBrowser" finished-at="2025-09-22T14:03:44Z" duration-ms="6824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeBrowser -->
        <test-method signature="endToEndTestcase()[pri:0, instance:tests.E2ETestCase@2631f68c]" started-at="2025-09-22T14:03:44Z" name="endToEndTestcase" finished-at="2025-09-22T14:04:09Z" duration-ms="25398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endToEndTestcase -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.E2ETestCase@2631f68c]" started-at="2025-09-22T14:04:09Z" name="tearDown" finished-at="2025-09-22T14:04:10Z" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.E2ETestCase -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
